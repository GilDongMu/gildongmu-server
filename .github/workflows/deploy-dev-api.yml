name: deployment api on develop server
on:
  push:
    branches:
      - develop
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: checkout
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: build with gradle
        run: |
          chmod +x ./gradlew 
          ./gradlew gildongmu-api:build

      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./gildongmu-api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api:latest
          build-args: |
            DB_URL=${{ secrets.DB_DEVELOP_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.HOST_DEVELOP_JWT_SECRET }}
            MONGO_URI=${{ secrets.MONGO_DEVELOP_URL }}
            REDIS_PASSWORD=${{ secrets.REDIS_DEVELOP_PASSWORD }}
            PROFILE=dev
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}

  deploy-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credential
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: ap-northeast-2

      - name: get runner ip addresses
        id: ip
        uses: haythem/public-ip@v1.2

      - name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.HOST_DEVELOP_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: deploy image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_DEVELOP }}
          username: ${{ secrets.HOST_DEVELOP_USERNAME }}
          key: ${{ secrets.HOST_DEVELOP_KEY }}
          port: ${{ secrets.HOST_SSH_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/api:latest
            docker stop api-server && docker rm api-server
            docker container run -d --name api-server -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/api:latest
            docker image prune -a -f

      - name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.HOST_DEVELOP_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32